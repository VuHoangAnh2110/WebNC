@model List<MVC04.Models.Product>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
}

<div class="container">
    <div class="mt-3 mb-3">
        <h3> Products </h3>
    </div>
    <div class="container mt-4">
        <div class="row g-4">
            @foreach (var product in Model)
            {
                <div class="col-md-4 d-flex">
                    <div class="card shadow-sm flex-grow-1">
                        <div class="position-relative p-3 mb-1">
                            <span class="badge bg-primary position-absolute top-0 end-0 m-2">@product.ProductPrice.ToString("N0") VND</span>
                        </div>
                        <a href="@Url.Action("ProductDetail", "Product", new { id = product.ProductID})">
                            <div class="image-container border rounded p-2 mx-3">
                                    <img src="@product.ImageURL" class="card-img-top" alt="@product.ProductName">
                            </div>
                        </a>
                        <div class="card-body d-flex flex-column">
                            <h4 class="card-title">@product.ProductName</h4>
                            <p class="card-text text-muted">@product.Description</p>
                            <div class="mt-auto text-star">
                                <button class="btn btn-success w-30 add-to-cart" data-id="@product.ProductID">Add to Cart</button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .image-container {
        height: 180px; 
        display: flex;
        overflow: hidden;
        border: 1px solid #ddd;
        background-color: #ffff;
    }

    .image-container img {
        max-height: 100%;
        max-width: 100%;
        object-fit: contain; 
    }

    .card {
        display: flex;
        flex-direction: column;
        background-color: #f5f5f5;
        height: 100%;
    }

    .badge {
        font-size: 0.9rem; 
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const addToCartButtons = document.querySelectorAll(".add-to-cart");

    addToCartButtons.forEach(button => {
        button.addEventListener("click", function () {
            const productId = this.getAttribute("data-id");

            fetch(`/Product/AddToCart?id=${productId}`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to add product to cart");
                }
                return response.json();
            })
            .then(data => {
                alert(data.message); 
                updateCartCount();
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Có lỗi xảy ra, vui lòng thử lại!");
            });
        });
    });
});
</script>